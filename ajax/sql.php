<?php
class SQLQueries
{
    private $sqlsreach = array();
    public function __construct()
    {
        $this->sqlsreach['L00000'] = "SELECT ID,RECNO, EMPNO, EMPNAME, PASS,IMG,USERLEVEL,PERMISSION FROM empl WHERE UPPER(LOGIN)=:login";
        // กำหนดคำสั่ง SQL สำหรับแต่ละค่า $queryIdHD ที่คุณต้องการ
        //APPPOINTMENT
        $this->sqlsreach['IND_APPPOINTMENT'] = "INSERT INTO appointment (CREATED,LASTUPD,CUSTNAME,STATUS,DETAIL,REMARK,STARTD,WARND,OWNERNAME) VALUES (NOW(),NOW(),:name,'A',:detail,:remark,:startd,:warmd,:ownername,)";
        $this->sqlsreach['IND_APPPOINTMENT_NEW'] = "INSERT INTO appointment (CREATED,LASTUPD,CUSTNAME,STATUS,DETAIL,REMARK,STARTD,WARND,OWNERNAME,ADDR) VALUES (NOW(),NOW(),:name,'A',:detail,:remark,:startd,:warmd,:ownername,:location)";
        $this->sqlsreach['UPD_APPPOINTMENT'] = " UPDATE appointment SET CUSTNAME = :name, DETAIL = :detail, REMARK = :remark, STARTD = :startd, WARND = :warmd , OWNERNAME = :ownername WHERE RECNO = :recno";
        $this->sqlsreach['UPD_APPPOINTMENT_NEW'] = " UPDATE appointment SET CUSTNAME = :name, DETAIL = :detail, REMARK = :remark, STARTD = :startd, WARND = :warmd , OWNERNAME = :ownername ,ADDR = :address ,STATUS = :status WHERE RECNO = :recno";
        $this->sqlsreach['DLT_APPPOINTMENT'] = "DELETE FROM appointment WHERE RECNO= :recno ";
        $this->sqlsreach['CHK_APPPOINTMENT'] = " SELECT COUNT(*) as count FROM appointment WHERE RECNO = :recno";
        $this->sqlsreach['SELECT_APPPOINTMENT'] = "SELECT * FROM appointment ORDER BY RECNO DESC";
        $this->sqlsreach['001'] = "INSERT INTO appointment (CUSTNAME) VALUES (:name)";
        $this->sqlsreach['SELECT_CUST'] = "SELECT RECNO,NAME FROM cust ORDER BY RECNO DESC";

        //QOUT
        $this->sqlsreach['COUNT_QUOTHD0'] = "SELECT QUOTHD.CUST, CUST.NAME AS CustomerName, CUST.CODE  AS CODE, CUST.CORP  AS CORPNAME, COUNT(QUOTHD.CUST) AS QUAN FROM QUOTHD LEFT JOIN CUST ON QUOTHD.CUST = CUST.RECNO GROUP BY QUOTHD.CUST, CUST.NAME, CUST.CODE, CUST.CORP ORDER BY QUAN DESC";
        $this->sqlsreach['COUNT_QUOTHD_DATEBE'] = "SELECT QUOTHD.CUST, CUST.NAME AS CustomerName, CUST.CODE  AS CODE, CUST.CORP  AS CORPNAME, COUNT(QUOTHD.CUST) AS QUAN FROM QUOTHD LEFT JOIN CUST ON QUOTHD.CUST = CUST.RECNO WHERE (QUOTHD.DOCDATE BETWEEN :ABEGIN AND :AEND) AND (QUOTHD.STATUS <> 'C') GROUP BY QUOTHD.CUST, CUST.NAME, CUST.CODE, CUST.CORP ORDER BY QUAN DESC";

        //SUPPINV
        $this->sqlsreach['SELECT_SUPPINVHD'] = "SELECT SUPPINVHD.RECNO, SUPPINVHD.STATUS, SUPPINVHD.DOCNO FROM SUPPINVHD ORDER BY RECNO ASC";
        $this->sqlsreach['SELECT_SUPPINVHD_ID'] = "SELECT SUPPINVHD.RECNO, SUPPINVHD.STATUS, SUPPINVHD.DOCNO FROM SUPPINVHD WHERE RECNO = :recno";
        $this->sqlsreach['UPD_SUPPINVHD'] = "UPDATE SUPPINVHD SET STATUS = :status WHERE RECNO = :recno";

        //INVOICE/INVCHD QOUT
        $this->sqlsreach['QOUT_INVOICE_0'] = "SELECT INVCHD.RECNO, INVCHD.DOCDATE, INVCHD.DUEDATE, INVCHD.DOCNO,INVCHD.VATRATE, INVCHD.SALES, INVCHD.ORDERNO, INVCDT.DETAIL, INVCDT.QUAN, INVCDT.UNITAMT, INVCDT.TOTALAMT, INVCHD.CURCODE, INVCHD.EXCHGRATE, CUST.CODE, CUST.NAME, EMPL.EMPNO, EMPL.EMPNAME FROM INVCHD LEFT JOIN CUST ON (INVCHD.CUST = CUST.RECNO) LEFT JOIN EMPL ON (INVCHD.SALES = EMPL.RECNO) LEFT JOIN INVCDT ON (INVCHD.RECNO = INVCDT.INVCHD) WHERE  (INVCHD.STATUS <> 'C') ORDER BY INVCHD.RECNO";
        $this->sqlsreach['QOUT_INVOICE_DATEBE'] = "SELECT INVCHD.RECNO, INVCHD.DOCDATE, INVCHD.DUEDATE, INVCHD.DOCNO,INVCHD,INVCHD.VATRATE, INVCHD.SALES, INVCHD.ORDERNO, INVCDT.DETAIL, INVCDT.QUAN, INVCDT.UNITAMT, INVCDT.TOTALAMT, INVCHD.CURCODE, INVCHD.EXCHGRATE, CUST.CODE, CUST.NAME, EMPL.EMPNO, EMPL.EMPNAME FROM INVCHD LEFT JOIN CUST ON (INVCHD.CUST = CUST.RECNO) LEFT JOIN EMPL ON (INVCHD.SALES = EMPL.RECNO) LEFT JOIN INVCDT ON (INVCHD.RECNO = INVCDT.INVCHD) WHERE (INVCHD.DOCDATE BETWEEN :ABEGIN AND :AEND) AND (INVCHD.STATUS <> 'C') ORDER BY INVCHD.RECNO";
        $this->sqlsreach['QOUT_INVOICE_SUMMARY0'] = "SELECT INVCHD.RECNO, INVCHD.DOCDATE, INVCHD.DUEDATE, INVCHD.DOCNO,INVCHD.VATRATE, INVCHD.SALES, INVCHD.ORDERNO, INVCHD.CURCODE, INVCHD.EXCHGRATE,INVCHD.TOTALAMT,INVCHD.DISTOTAL,INVCHD.NETAMT, CUST.CODE, CUST.NAME FROM INVCHD LEFT JOIN CUST ON (INVCHD.CUST = CUST.RECNO) WHERE  (INVCHD.STATUS <> 'C') ORDER BY INVCHD.RECNO";
        $this->sqlsreach['QOUT_INVOICE_SUMMARYDATEBE'] = "SELECT INVCHD.RECNO, INVCHD.DOCDATE, INVCHD.DUEDATE, INVCHD.DOCNO,INVCHD.VATRATE, INVCHD.SALES, INVCHD.ORDERNO, INVCHD.CURCODE, INVCHD.EXCHGRATE,INVCHD.TOTALAMT,INVCHD.DISTOTAL,INVCHD.NETAMT, CUST.CODE, CUST.NAME FROM INVCHD LEFT JOIN CUST ON (INVCHD.CUST = CUST.RECNO) WHERE  (INVCHD.DOCDATE BETWEEN :ABEGIN AND :AEND) AND (INVCHD.STATUS <> 'C') ORDER BY INVCHD.RECNO";

        //EXCEL
        $this->sqlsreach['EXCEL_CUSTOMERSALE'] = "SELECT QUOTHD.RECNO, QUOTHD.DOCDATE, QUOTHD.DOCNO, QUOTHD.REVISE, CUST.CODE, CUST.SNAME, CUST.NAME, CUSTCONT.CONTNAME, QUOTDT.DETAIL, EMPL.EMPNAME, QUOTHD.CREDIT, QUOTHD.REMARK, QUOTDT.QUAN, QUOTDT.UNITAMT, QUOTDT.TOTALAMT FROM QUOTHD LEFT JOIN CUST ON (QUOTHD.CUST = CUST.RECNO) LEFT JOIN CUSTCONT ON (QUOTHD.CONT = CUSTCONT.RECNO) LEFT JOIN EMPL ON (QUOTHD.SALES = EMPL.RECNO) LEFT JOIN quotdt ON (QUOTHD.RECNO = quotdt.QUOTHD) WHERE  (QUOTHD.STATUS <> 'C') AND  (QUOTDT.DETAIL <> '')  AND (QUOTHD.DOCDATE BETWEEN :ABEGIN AND :AEND) ORDER BY QUOTHD.RECNO";
        $this->sqlsreach['EXCEL_QOUT_INVOICE'] = "SELECT INVCHD.RECNO, INVCHD.DOCDATE, INVCHD.DUEDATE, INVCHD.DOCNO, INVCHD.ORDERNO, CUST.CODE, CUST.SNAME, CUST.NAME, CUSTCONT.CONTNAME, EMPL.EMPNAME, INVCDT.DETAIL , INVCDT.QUAN, INVCDT.QUANDLY, INVCDT.UNITAMT, INVCDT.TOTALAMT FROM INVCHD LEFT JOIN CUST ON (INVCHD.CUST = CUST.RECNO) LEFT JOIN CUSTCONT ON (INVCHD.CONT = CUSTCONT.RECNO) LEFT JOIN EMPL ON (INVCHD.SALES = EMPL.RECNO) LEFT JOIN INVCDT ON (INVCHD.RECNO = INVCDT.INVCHD) WHERE (INVCHD.DOCDATE BETWEEN :ABEGIN AND :AEND) AND (INVCDT.DETAIL <> '')  AND (INVCHD.STATUS <> 'C') ORDER BY INVCHD.RECNO";
        $this->sqlsreach['EXCEL_QOUT_ORDERHD'] = "SELECT ORDERHD.RECNO, ORDERHD.DOCDATE, ORDERHD.DOCNO, ORDERHD.CUSTORDERNO, CUST.CODE, CUST.SNAME, CUST.NAME, CUSTCONT.CONTNAME, EMPL.EMPNAME, ORDERDT.DETAIL, ORDERDT.QUANDLY, ORDERDT.UNITAMT, ORDERDT.TOTALAMT FROM ORDERHD LEFT JOIN CUST ON (ORDERHD.CUST = CUST.RECNO) LEFT JOIN CUSTCONT ON (ORDERHD.CONT = CUSTCONT.RECNO) LEFT JOIN EMPL ON (ORDERHD.SALES = EMPL.RECNO) LEFT JOIN ORDERDT ON (ORDERHD.RECNO = ORDERDT. ORDERHD) WHERE (ORDERHD.DOCDATE BETWEEN :ABEGIN AND :AEND)  AND  (ORDERDT.DETAIL <> '')  AND (ORDERHD.STATUS <> 'C') ORDER BY ORDERHD.RECNO";
        $this->sqlsreach['EXCEL_QOUT_DELYHD'] = "SELECT DELYHD.RECNO, DELYHD.DOCDATE, DELYHD.DOCNO, DELYHD.ORDERHD, CUST.CODE, CUST.SNAME, CUST.NAME, EMPL.EMPNAME, DELYDT.DETAIL, DELYDT.QUAN, DELYDT.UNITAMT, DELYDT.TOTALAMT FROM DELYHD LEFT JOIN CUST ON (DELYHD.CUST = CUST.RECNO) LEFT JOIN EMPL ON (DELYHD.SALES = EMPL.RECNO) LEFT JOIN DELYDT ON (DELYHD.RECNO = DELYDT.DELYHD) WHERE (DELYHD.DOCDATE BETWEEN :ABEGIN AND :AEND)  AND  (DELYDT.DETAIL <> '')  AND (DELYHD.STATUS <> 'C') ORDER BY DELYHD.RECNO";

        //PURCHD
        $this->sqlsreach['COUNT_PURCHD0'] = "SELECT PURCHD.SUPP, SUPP.NAME AS SUPPOMERNAME, SUPP.CODE  AS CODE, SUPP.CORP  AS CORPNAME, COUNT(PURCHD.SUPP) AS QUAN FROM PURCHD LEFT JOIN SUPP ON PURCHD.SUPP = SUPP.RECNO GROUP BY PURCHD.SUPP, SUPP.NAME, SUPP.CODE, SUPP.CORP ORDER BY QUAN DESC";
        $this->sqlsreach['COUNT_PURCHD_DATEBE'] = "SELECT PURCHD.SUPP, SUPP.NAME AS SUPPOMERNAME, SUPP.CODE  AS CODE, SUPP.CORP  AS CORPNAME, COUNT(PURCHD.SUPP) AS QUAN FROM PURCHD LEFT JOIN SUPP ON PURCHD.SUPP = SUPP.RECNO WHERE (PURCHD.DOCDATE BETWEEN :ABEGIN AND :AEND) AND (PURCHD.STATUS <> 'C') GROUP BY PURCHD.SUPP, SUPP.NAME, SUPP.CODE, SUPP.CORP ORDER BY QUAN DESC";
        $this->sqlsreach['PO_INVOICE_SUMMARY0'] = "SELECT SUPPINVHD.RECNO, SUPPINVHD.DOCDATE, SUPPINVHD.DOCNO,SUPPINVHD.VATRATE,SUPPINVHD.TOTALAMT,SUPPINVHD.DISTOTAL,SUPPINVHD.NETAMT, SUPP.CODE, SUPP.NAME FROM SUPPINVHD LEFT JOIN SUPP ON (SUPPINVHD.SUPP = SUPP.RECNO) WHERE  (SUPPINVHD.STATUS <> 'C') ORDER BY SUPPINVHD.RECNO";
        $this->sqlsreach['PO_INVOICE_SUMMARYDATEBE'] = "SELECT SUPPINVHD.RECNO, SUPPINVHD.DOCDATE, SUPPINVHD.DOCNO,SUPPINVHD.VATRATE,SUPPINVHD.TOTALAMT,SUPPINVHD.DISTOTAL,SUPPINVHD.NETAMT, SUPP.CODE, SUPP.NAME FROM SUPPINVHD LEFT JOIN SUPP ON (SUPPINVHD.SUPP = SUPP.RECNO) WHERE  (SUPPINVHD.DOCDATE BETWEEN :ABEGIN AND :AEND) AND (SUPPINVHD.STATUS <> 'C') ORDER BY SUPPINVHD.RECNO";

        //QC
        $this->sqlsreach['SELECT_POQC'] = "SELECT PURCHD.RECNO, PURCHD.CORP, PURCHD.DOCDATE, PURCHD.DOCNO,PURCHD.STATUS, PURCHD.QTYNG, PURCHD.QPOINT, (SELECT SUM(PURCDT.QUANDLY) FROM PURCDT WHERE PURCDT.PURCHD=PURCHD.RECNO) QTYITEM, PRJOBHD.DOCTYPE FROM PURCHD LEFT JOIN PRJOBHD ON (PURCHD.PRHD = PRJOBHD.RECNO) WHERE (PURCHD.DOCDATE BETWEEN :ABEGIN AND :AEND) ORDER BY EXTRACT(YEAR FROM PURCHD.DOCDATE), EXTRACT(MONTH FROM PURCHD.DOCDATE), PRJOBHD.DOCTYPE, PURCHD.DOCNO";
        $this->sqlsreach['SELECT_POQC_ALL'] = "SELECT PURCHD.RECNO, PURCHD.CORP, PURCHD.DOCDATE, PURCHD.DOCNO,PURCHD.STATUS, PURCHD.QTYNG, PURCHD.QPOINT, (SELECT SUM(PURCDT.QUANDLY) FROM PURCDT WHERE PURCDT.PURCHD=PURCHD.RECNO) QTYITEM, PRJOBHD.DOCTYPE FROM PURCHD LEFT JOIN PRJOBHD ON (PURCHD.PRHD = PRJOBHD.RECNO)  ORDER BY EXTRACT(YEAR FROM PURCHD.DOCDATE), EXTRACT(MONTH FROM PURCHD.DOCDATE), PRJOBHD.DOCTYPE, PURCHD.DOCNO";
        //PO
        $this->sqlsreach['PO_REPORT'] = "SELECT SUPP.CODE SUPPCODE, SUPP.NAME SUPPNAME, SUPPINVHD.RECNO RECNOSUP, SUPPINVHD.DOCNO, SUPPINVHD.SUPPINVNO, SUPPINVHD.DOCDATE, SUPPINVDT.RECNO, SUPPINVDT.STATUS, SUPPINVDT.DETAIL, SUPPINVDT.UNITNO, SUPPINVDT.QUAN, SUPPINVDT.QUANDLY, SUPPINVDT.UNITAMT, SUPPINVDT.TOTALAMT, PURCHD.DOCNO PURCHDDOCNO, PURCDT.DETAIL PURCDETAIL, PURCDT.QUANORD PURCQUANORD, PURCDT.UNITNO PURCUNITNO, PURCDT.UNITAMT PURCUNITAMT, PURCDT.TOTALAMT PURCTOTALAMT FROM SUPPINVDT LEFT JOIN PURCDT ON (SUPPINVDT.PURCDT= PURCDT.RECNO) LEFT JOIN SUPPINVHD ON (SUPPINVHD.RECNO = SUPPINVDT.SUPPINVHD) LEFT JOIN PURCHD ON (PURCHD.RECNO = SUPPINVHD.PURCHD) LEFT JOIN SUPP ON (SUPP.RECNO = SUPPINVDT.SUPP) WHERE (SUPPINVHD.DOCDATE BETWEEN :ABEGIN AND :AEND) ORDER BY SUPPINVHD.RECNO,SUPPINVDT.LINENO";
        $this->sqlsreach['PO_REPORT_ALL'] = "SELECT SUPP.CODE SUPPCODE, SUPP.NAME SUPPNAME, SUPPINVHD.RECNO RECNOSUP, SUPPINVHD.DOCNO, SUPPINVHD.SUPPINVNO, SUPPINVHD.DOCDATE, SUPPINVDT.RECNO, SUPPINVDT.STATUS, SUPPINVDT.DETAIL, SUPPINVDT.UNITNO, SUPPINVDT.QUAN, SUPPINVDT.QUANDLY, SUPPINVDT.UNITAMT, SUPPINVDT.TOTALAMT, PURCHD.DOCNO PURCHDDOCNO, PURCDT.DETAIL PURCDETAIL, PURCDT.QUANORD PURCQUANORD, PURCDT.UNITNO PURCUNITNO, PURCDT.UNITAMT PURCUNITAMT, PURCDT.TOTALAMT PURCTOTALAMT FROM SUPPINVDT LEFT JOIN PURCDT ON (SUPPINVDT.PURCDT= PURCDT.RECNO) LEFT JOIN SUPPINVHD ON (SUPPINVHD.RECNO = SUPPINVDT.SUPPINVHD) LEFT JOIN PURCHD ON (PURCHD.RECNO = SUPPINVHD.PURCHD) LEFT JOIN SUPP ON (SUPP.RECNO = SUPPINVDT.SUPP) ORDER BY  SUPPINVHD.RECNO,SUPPINVDT.LINENO";


        //INVENT
        $this->sqlsreach['INVENT'] = "SELECT * FROM equipment";
        $this->sqlsreach['SEL_INVENT_DR'] = "SELECT RECNO,CODE FROM INVENT";
        $this->sqlsreach['IDSEL_INVENT'] = "SELECT * FROM INVENT WHERE RECNO = :recno";
        ////
        $this->sqlsreach['SELMAX_INVREQHD'] = "SELECT 
        MAX(CASE WHEN IO = 'O' THEN DOCNO END) AS DOCNO_O,
        MAX(CASE WHEN IO = 'I' THEN DOCNO END) AS DOCNO_I
        FROM INVREQHD;
         ";
        $this->sqlsreach['IND_INVREQHD'] = "INSERT INTO INVREQHD (RECNO, LASTUPD, STATUS, CORP, REQTYPE, IO, DOCDATE, DOCNO) VALUES (:recno, 'NOW', :status, '1', :reqtype, :io, :docdate,:docno)";
        // $this->sqlsreach['IND_INVREQHD'] = "INSERT INTO INVREQHD (RECNO, LASTUPD) VALUES (:recno, 'NOW')";
        $this->sqlsreach['UPD_INVREQHD'] = "UPDATE INVREQHD SET IO = 'I' WHERE RECNO = :recno";
        $this->sqlsreach['IND_INVREQDT'] = "INSERT INTO INVREQDT (RECNO, LASTUPD, STATUS, CORP,INVREQHD,REQTYPE,IO, CUST, SUPP, REFDOCHD, REFDOCDT, LINENO, ITEMNO, INVENT, QUANORD, QUANDLY, LISTUNIT, PURPOSE) VALUES (:recno, 'NOW', :status, :corp, :invreqhd,:reqtype,:io, NULL, NULL, :refdochd, :refdocdt, :lineno, :itemno, :invent, :quanord, :quandly, :listunit, NULL)";
        $this->sqlsreach['IAD_INVENT'] = "UPDATE INVENT SET LASTUPD='NOW', QUAN=QUAN + :quan WHERE RECNO=:recno";
        $this->sqlsreach['IDE_INVENT'] = "UPDATE INVENT SET LASTUPD='NOW', QUAN=QUAN - :quan WHERE RECNO=:recno";
        //EQUIPMENT
        $this->sqlsreach['SEL_EQUIPMENT'] = "SELECT * FROM equipment";
        $this->sqlsreach['SEL_EQUIPMENT_DR'] = "SELECT RECNO,NAME,CODE FROM equipment";
        $this->sqlsreach['IDSEL_EQUIPMENT'] = "SELECT * FROM equipment WHERE RECNO = :recno";
        $this->sqlsreach['IND_EQUIPMENT'] = "INSERT INTO equipment (CREATED,DOCNO, NAME, CODE, TYPE, MODEL, CUSTNAME, CONTNAME, PHONE, EMAIL, STATUS, DOCINFO, PRIORITY, MAINTENANCETIMES, BROKENTIMES, WARRANTY, PURCHASEDATE, FIRSTUSAGE, LASTUSAGE, DETAILS, RECORDERNO, RECORDERNAME, AREA, UPLOAD) VALUES (NOW(),:docno, :name, :code, :type, :model, :custname, :contname, :phone, :email, :status, :docinfo, :priority, :maintenancetimes, :brokentimes, :warranty, :purchasedate, :firstusage, :lastusage, :details, :recorderno, :recordername, :area, :upload)";
        $this->sqlsreach['UPD_EQUIPMENT'] =  "UPDATE equipment SET NAME = :name, CODE = :code, TYPE = :type, MODEL = :model, CUSTNAME = :custname, CONTNAME = :contname, PHONE = :phone, EMAIL = :email, STATUS = :status, DOCINFO = :docinfo, PRIORITY = :priority, MAINTENANCETIMES = :maintenancetimes, BROKENTIMES = :brokentimes, WARRANTY = :warranty, PURCHASEDATE = :purchasedate, FIRSTUSAGE = :firstusage, LASTUSAGE = :lastusage, DETAILS = :details, RECORDERNO = :recorderno, RECORDERNAME = :recordername, AREA = :area, UPLOAD = :upload WHERE RECNO = :recno";

        //NOTIMAINTEN
        $this->sqlsreach['SEL_NOTIMAINTEN'] = "SELECT nm.RECNO,nm.DOCNO, nm.NAME, nm.CONTNAME, nm.STATUS, nm.PRIORITY, nm.PRICECOST, nm.PRICEPWITHDRAW, nm.WARNINGDATE, nm.DETAILS, nm.RECORDERNO, nm.RECORDERNAME, eq.NAME AS EQUIPMENT_NAME FROM notimainten nm left JOIN equipment eq ON nm.EQUIPMENT = eq.RECNO";
        $this->sqlsreach['IND_NOTIMAINTEN'] = "INSERT INTO notimainten (CREATED, DOCNO, NAME, CONTNAME, EQUIPMENT, STATUS, PRIORITY, PRICECOST, PRICEPWITHDRAW, WARNINGDATE, DETAILS, RECORDERNO, RECORDERNAME) VALUES (NOW(), :docno, :name, :contname, :equipment, :status, :priority, :pricecost, :pricepwithdraw, :warningdate, :details, :recorderno, :recordername)";
        $this->sqlsreach['UPD_NOTIMAINTEN'] = "UPDATE notimainten SET NAME = :name, CONTNAME = :contname, EQUIPMENT = :equipment, STATUS = :status, PRIORITY = :priority, PRICECOST = :pricecost, PRICEPWITHDRAW = :pricepwithdraw, WARNINGDATE = :warningdate, DETAILS = :details, RECORDERNO = :recorderno, RECORDERNAME = :recordername WHERE RECNO = :recno";
        $this->sqlsreach['EDSEL_NOTIMAINTEN'] = "SELECT * FROM notimainten WHERE RECNO = :recno";

        // LISTUNIT
        $this->sqlsreach['LISTUNIT'] = "SELECT LISTUNIT.RECNO,LISTUNIT.UNITNAME FROM LISTUNIT";

        //EMPL
        $this->sqlsreach['EMPL_LIST']     =  "SELECT RECNO,EMPNAME,EMPNO  FROM empl";
        $this->sqlsreach['ID_EMPL_LIST'] =  "SELECT * FROM empl WHERE RECNO = :recno";
        $this->sqlsreach['ID_EMPL_LIST_ID'] =  "SELECT ID,EMPNO,EMPNAME,EMPNICK,LOGIN,PASS,USERLEVEL FROM empl WHERE ID = :id";
        $this->sqlsreach['ALL_EMPL_LIST'] =  "SELECT * FROM empl";
        // $this->sqlsreach['ALL_EMPL_LISTMYSQL'] =  "SELECT * FROM empl";
        $this->sqlsreach['CHECK_EMPL_RECNO'] = "SELECT COUNT(*) AS count FROM empl WHERE RECNO = :recno";
        $this->sqlsreach['CHECK_EMPL_COUNT'] = "SELECT COUNT(CASE WHEN EMPNO = :empno THEN 1 ELSE NULL END) AS count_empno, COUNT(CASE WHEN LOGIN = :login THEN 1 ELSE NULL END) AS count_login FROM empl WHERE EMPNO = :empno OR LOGIN = :login";


        $this->sqlsreach['IND_EMPL'] =  "INSERT INTO empl (LASTUPD, PERMISSION, STATUS, USERLEVEL, EMPNO, EMPNAME, EMPNAMEEN, EMPNICK, LOGIN, PASS, CREATED, IMG) VALUES (NOW() ,'' ,'T' ,:userlevel ,:empno ,:empname ,'' ,:empnick ,:login ,:pass ,NOW() ,'')";
        $this->sqlsreach['UPD_EMPL'] =  "UPDATE empl SET EMPNO = :empno, LASTUPD = NOW(), USERLEVEL = :userlevel, EMPNAME = :empname, EMPNICK = :empnick, LOGIN = :login, PASS = :pass WHERE RECNO = :recno ";
        $this->sqlsreach['DLD_EMPL'] = "DELETE FROM empl WHERE RECNO= :recno ";
        $this->sqlsreach['INSERT_EMPL_NEW'] = "INSERT INTO empl (RECNO,LASTUPD, PERMISSION, STATUS, USERLEVEL, EMPNO, EMPNAME, EMPNAMEEN, EMPNICK, LOGIN, PASS, CREATED, IMG,STYPE)
        VALUES (:recno,NOW(), '', 'T', :userlevel, :empno, :empname, '', :empnick, :login, :pass, NOW(), '','IR')
        ON DUPLICATE KEY UPDATE
            LASTUPD = NOW(),
            RECNO = VALUES(RECNO)";
        //EMPL MYSQL ID
        $this->sqlsreach['CHECK_EMPL_UPID'] = " SELECT 
        COUNT(CASE WHEN EMPNO = :empno THEN 1 ELSE NULL END) AS count_empno, 
        COUNT(CASE WHEN LOGIN = :login THEN 1 ELSE NULL END) AS count_login 
        FROM empl 
        WHERE (EMPNO = :empno OR LOGIN = :login) AND (ID <> :id)";
        $this->sqlsreach['DLD_EMPL_ID'] = "DELETE FROM empl WHERE ID= :id ";
        $this->sqlsreach['UPD_EMPL_ID'] =  "UPDATE empl SET EMPNO = :empno, LASTUPD = NOW(), USERLEVEL = :userlevel, EMPNAME = :empname, EMPNICK = :empnick, LOGIN = :login, PASS = :pass WHERE ID = :id ";


        //PTYCASH
        $this->sqlsreach['PTYCASH_LIST'] = "SELECT RECNO,DOCDATE,DESCRIPT,ADDAMT  FROM PTYCASH WHERE DOCTYPE = 'C' ORDER BY DOCDATE ASC";
        $this->sqlsreach['ID_PTYCASH_LIST'] = "SELECT RECNO,DOCDATE,DESCRIPT,ADDAMT  FROM PTYCASH WHERE DOCTYPE = 'C' AND RECNO = :recno ORDER BY DOCDATE ASC";
        $this->sqlsreach['PTYCASH_UP'] = "UPDATE PTYCASH SET  ADDAMT = :addamt WHERE RECNO = :recno";

        //DRAWING
        $this->sqlsreach['SEL_DRAWING'] = "SELECT * FROM drawing";
        $this->sqlsreach['EDSEL_DRAWING'] = "SELECT * FROM drawing WHERE RECNO = :recno";
        $this->sqlsreach['IND_DRAWING'] = "INSERT INTO drawing (CREATED, LASTUPD,STATUS, CUSTOMER, DRAWNO, REVNO, PARTNAME, RECDATE, REMARK, CREATEDBY, MODIFIEDBY) VALUES (NOW(), NOW(),'A',:customer, :drawno, :revno, :partname, :recdate, :remark, :modifiedby, :modifiedby)";
        $this->sqlsreach['CHECK_DRAWING'] = "SELECT COUNT(*) FROM drawing WHERE  DRAWNO = :DRAWNO";
        $this->sqlsreach['UPD_DRAWING'] = "UPDATE drawing SET CUSTOMER = :CUSTOMER, DRAWNO = :DRAWNO, REVNO = :REVNO, PARTNAME = :PARTNAME, RECDATE = :RECDATE, REMARK = :REMARK, MODIFIEDBY = :MODIFIEDBY, LASTUPD = NOW() WHERE RECNO = :RECNO";
        $this->sqlsreach['MOUPD_DRAWING'] = "UPDATE drawing SET  STATUS = 'D', LASTUPD = NOW() WHERE RECNO = :RECNO";

        //JOBLINE
        // $this->sqlsreach['JOBDAILYDATEBE'] = "SELECT JOBSTEP.RECNO, JOBSTEP.STEPSTART, JOBSTEP.STEPFINISH, JOBSTEP.TOTALMIN, JOBSTEP.GOODPROD, JOBSTEP.BADPROD, JOBSTEP.RETPROD, JOBSTEP.REMARK, JOBLINE.DOCNO, INVENT.CODE, INVENT.PRODNAME, EMPL.EMPNO, EMPL.EMPNAME, MACHINE.MCCODE, JOBPROC.ITEMNO, PROCESS.PROCCODE, JOBLINE.MAXPROC, CUST.CODE, CUST.NAME FROM JOBSTEP LEFT JOIN JOBLINE ON (JOBSTEP.JOBLINE = JOBLINE.RECNO) LEFT JOIN INVENT ON (JOBLINE.INVENT = INVENT.RECNO) LEFT JOIN EMPL ON (JOBSTEP.EMPL = EMPL.RECNO) LEFT JOIN JOBPROC ON (JOBSTEP.JOBPROC = JOBPROC.RECNO) LEFT JOIN PROCESS ON (JOBPROC.PROCESS = PROCESS.RECNO) LEFT JOIN MACHINE ON (JOBSTEP.MACHINE = MACHINE.RECNO) LEFT JOIN CUST ON (JOBLINE.CUST = CUST.RECNO) WHERE (JOBSTEP.STEPSTART BETWEEN :ABEGIN AND :AEND) ORDER BY JOBSTEP.STEPSTART";
        $this->sqlsreach['JOBDAILYDATEBE'] = "SELECT JOBSTEP.RECNO, JOBSTEP.STEPSTART, JOBSTEP.STEPFINISH, JOBSTEP.TOTALMIN, JOBSTEP.GOODPROD, JOBSTEP.BADPROD, JOBSTEP.RETPROD, JOBSTEP.REMARK, JOBLINE.DOCNO, INVENT.CODE, INVENT.PRODNAME, EMPL.EMPNO, EMPL.EMPNAME, MACHINE.MCCODE, JOBPROC.ITEMNO, PROCESS.PROCCODE, JOBLINE.MAXPROC, CUST.CODE, CUST.NAME FROM JOBSTEP LEFT JOIN JOBLINE ON (JOBSTEP.JOBLINE = JOBLINE.RECNO) LEFT JOIN INVENT ON (JOBLINE.INVENT = INVENT.RECNO) LEFT JOIN EMPL ON (JOBSTEP.EMPL = EMPL.RECNO) LEFT JOIN JOBPROC ON (JOBSTEP.JOBPROC = JOBPROC.RECNO) LEFT JOIN PROCESS ON (JOBPROC.PROCESS = PROCESS.RECNO) LEFT JOIN MACHINE ON (JOBSTEP.MACHINE = MACHINE.RECNO) LEFT JOIN CUST ON (JOBLINE.CUST = CUST.RECNO) WHERE  (CAST(JOBSTEP.STEPSTART AS DATE) BETWEEN :ABEGIN AND :AEND) ORDER BY JOBSTEP.STEPSTART";
        $this->sqlsreach['JOBDAILY'] = "SELECT JOBSTEP.RECNO, JOBSTEP.STEPSTART, JOBSTEP.STEPFINISH, JOBSTEP.TOTALMIN, JOBSTEP.GOODPROD, JOBSTEP.BADPROD, JOBSTEP.RETPROD, JOBSTEP.REMARK, JOBLINE.DOCNO, INVENT.CODE, INVENT.PRODNAME, EMPL.EMPNO, EMPL.EMPNAME, MACHINE.MCCODE, JOBPROC.ITEMNO, PROCESS.PROCCODE, JOBLINE.MAXPROC, CUST.CODE, CUST.NAME FROM JOBSTEP LEFT JOIN JOBLINE ON (JOBSTEP.JOBLINE = JOBLINE.RECNO) LEFT JOIN INVENT ON (JOBLINE.INVENT = INVENT.RECNO) LEFT JOIN EMPL ON (JOBSTEP.EMPL = EMPL.RECNO) LEFT JOIN JOBPROC ON (JOBSTEP.JOBPROC = JOBPROC.RECNO) LEFT JOIN PROCESS ON (JOBPROC.PROCESS = PROCESS.RECNO) LEFT JOIN MACHINE ON (JOBSTEP.MACHINE = MACHINE.RECNO) LEFT JOIN CUST ON (JOBLINE.CUST = CUST.RECNO)  ORDER BY JOBSTEP.STEPSTART";
        $this->sqlsreach['JOBCLOSEDUE'] = "SELECT JOBLINE.RECNO, JOBLINE.DOCDATE, JOBLINE.DOCNO, JOBLINE.COMPDATE, JOBSTEP.STEPSTART, CAST((JOBLINE.COMPDATE - CURRENT_DATE) AS INTEGER) DAYLEFT, JOBPROC.ITEMNO, JOBLINE.MAXPROC, PROCESS.PROCCODE, MACHINE.MCCODE, EMPL.EMPNAME, JOBLINE.QUANORDER, JOBLINE.QUANDONE, JOBLINE.QUANBAD, JOBLINE.QUANRET, JOBLINE.QUANCLAIM, JOBLINE.QUANBADNG, CUST.NAME CUSTNAME, INVENT.CODE INVCODE, INVENT.PRODNAME FROM JOBLINE LEFT JOIN CUST ON (JOBLINE.CUST = CUST.RECNO) LEFT JOIN INVENT ON (JOBLINE.INVENT = INVENT.RECNO) LEFT JOIN JOBSTEP ON ((SELECT A.RECNO FROM JOBSTEP A WHERE (A.JOBLINE = JOBLINE.RECNO) AND (A.STEPSTART = (SELECT MAX(JOBSTEP.STEPSTART) FROM JOBSTEP WHERE (JOBSTEP.JOBLINE = JOBLINE.RECNO))) ROWS 1) = JOBSTEP.RECNO) LEFT JOIN JOBPROC ON (JOBSTEP.JOBPROC = JOBPROC.RECNO) LEFT JOIN PROCESS ON (JOBPROC.PROCESS = PROCESS.RECNO) LEFT JOIN EMPL ON (JOBSTEP.EMPL = EMPL.RECNO) LEFT JOIN MACHINE ON (JOBSTEP.MACHINE = MACHINE.RECNO) WHERE (JOBLINE.STATUS = 'W') AND (CAST((JOBLINE.COMPDATE - CURRENT_DATE) AS INTEGER) <= :DATEPERIOD) AND (JOBLINE.COMPDATE >= CURRENT_DATE) ORDER BY DAYLEFT, JOBLINE.DOCNO";
        $this->sqlsreach['JOBOVERDUE'] = "SELECT JOBLINE.RECNO, JOBLINE.DOCDATE, JOBLINE.DOCNO, JOBLINE.COMPDATE, JOBSTEP.STEPSTART, CAST((CURRENT_DATE - JOBLINE.COMPDATE) AS INTEGER) DAYOVER, JOBPROC.ITEMNO, JOBLINE.MAXPROC, PROCESS.PROCCODE, MACHINE.MCCODE, EMPL.EMPNAME, JOBLINE.QUANORDER, JOBLINE.QUANDONE, JOBLINE.QUANBAD, JOBLINE.QUANRET, JOBLINE.QUANCLAIM, JOBLINE.QUANBADNG, CUST.NAME CUSTNAME, INVENT.CODE INVCODE, INVENT.PRODNAME FROM JOBLINE LEFT JOIN CUST ON (JOBLINE.CUST = CUST.RECNO) LEFT JOIN INVENT ON (JOBLINE.INVENT = INVENT.RECNO) LEFT JOIN JOBSTEP ON ((SELECT A.RECNO FROM JOBSTEP A WHERE (A.JOBLINE = JOBLINE.RECNO) AND (A.STEPSTART = (SELECT MAX(JOBSTEP.STEPSTART) FROM JOBSTEP WHERE (JOBSTEP.JOBLINE = JOBLINE.RECNO))) ROWS 1) = JOBSTEP.RECNO) LEFT JOIN JOBPROC ON (JOBSTEP.JOBPROC = JOBPROC.RECNO) LEFT JOIN PROCESS ON (JOBPROC.PROCESS = PROCESS.RECNO) LEFT JOIN EMPL ON (JOBSTEP.EMPL = EMPL.RECNO) LEFT JOIN MACHINE ON (JOBSTEP.MACHINE = MACHINE.RECNO) WHERE (JOBLINE.STATUS = 'W') AND (JOBLINE.COMPDATE < CURRENT_DATE) ORDER BY DAYOVER, JOBLINE.DOCNO";
        // $this->sqlsreach['JOBDISCON'] =  "SELECT JOBLINE.RECNO, JOBLINE.DOCDATE, JOBLINE.DOCNO, JOBLINE.COMPDATE, JOBSTEP.STEPSTART, CAST((CURRENT_DATE - CAST(JOBSTEP.STEPSTART AS DATE)) AS INTEGER) DAYLEFT, JOBPROC.ITEMNO, JOBLINE.MAXPROC, PROCESS.PROCCODE, MACHINE.MCCODE, EMPL.EMPNAME, JOBLINE.QUANORDER, JOBLINE.QUANDONE, JOBLINE.QUANBAD, JOBLINE.QUANRET, JOBLINE.QUANCLAIM, JOBLINE.QUANBADNG, CUST.NAME CUSTNAME, INVENT.CODE INVCODE, INVENT.PRODNAME FROM JOBLINE LEFT JOIN CUST ON (JOBLINE.CUST = CUST.RECNO) LEFT JOIN INVENT ON (JOBLINE.INVENT = INVENT.RECNO) LEFT JOIN JOBSTEP ON ((SELECT A.RECNO FROM JOBSTEP A WHERE (A.JOBLINE = JOBLINE.RECNO) AND (A.STEPSTART = (SELECT MAX(JOBSTEP.STEPSTART) FROM JOBSTEP WHERE (JOBSTEP.JOBLINE = JOBLINE.RECNO))) ROWS 1) = JOBSTEP.RECNO) LEFT JOIN JOBPROC ON (JOBSTEP.JOBPROC = JOBPROC.RECNO) LEFT JOIN PROCESS ON (JOBPROC.PROCESS = PROCESS.RECNO) LEFT JOIN EMPL ON (JOBSTEP.EMPL = EMPL.RECNO) LEFT JOIN MACHINE ON (JOBSTEP.MACHINE = MACHINE.RECNO) WHERE (JOBLINE.STATUS = 'W') AND ((JOBSTEP.STEPSTART < DATEADD(:DATEPERIOD DAY TO CURRENT_DATE)) OR (JOBSTEP.STEPSTART IS NULL)) ORDER BY JOBLINE.LASTUPD, JOBLINE.DOCNO";
        $this->sqlsreach['JOBDISCON'] = "SELECT JOBLINE.RECNO, JOBLINE.DOCDATE, JOBLINE.DOCNO, JOBLINE.COMPDATE, JOBSTEP.STEPSTART, CAST((CURRENT_DATE - JOBLINE.DOCDATE ) AS INTEGER) DAYLEFT , JOBLINE.QUANORDER , CUST.NAME CUSTNAME, CUST.CODE CODE, INVENT.CODE INVCODE, INVENT.PRODNAME,ORDERDT.UNITAMT,ORDERDT.TOTALAMT FROM JOBLINE LEFT JOIN CUST ON (JOBLINE.CUST = CUST.RECNO) LEFT JOIN ORDERDT ON (JOBLINE.ORDERDT = ORDERDT.RECNO) LEFT JOIN INVENT ON (JOBLINE.INVENT = INVENT.RECNO) LEFT JOIN JOBSTEP ON ((SELECT A.RECNO FROM JOBSTEP A WHERE (A.JOBLINE = JOBLINE.RECNO) AND (A.STEPSTART = (SELECT MAX(JOBSTEP.STEPSTART) FROM JOBSTEP WHERE (JOBSTEP.JOBLINE = JOBLINE.RECNO))) ROWS 1) = JOBSTEP.RECNO) WHERE (JOBLINE.STATUS = 'W') AND  ((JOBLINE.DOCDATE BETWEEN :ABEGIN AND :AEND) AND (JOBSTEP.STEPSTART IS NULL)) ORDER BY JOBLINE.LASTUPD, JOBLINE.DOCNO";
        $this->sqlsreach['STOCKNOTI'] = "SELECT INVENT.RECNO, INVENT.CODE, INVENT.PRODNAME, INVENT.QUAN, INVENT.QTYMIN, INVTYPE.TYPENAME, LISTUNIT.UNITNAME, INVTYPE.INVTYPEID FROM INVENT LEFT JOIN INVTYPE ON (INVENT.INVTYPE = INVTYPE.RECNO) LEFT JOIN LISTUNIT ON (INVENT.LISTUNIT = LISTUNIT.RECNO) WHERE (INVENT.QTYMIN IS NOT NULL) AND (INVENT.QTYMIN > 0) AND (INVENT.QUAN < INVENT.QTYMIN) AND (INVTYPE.INVTYPEID = :DOCTYPE) ORDER BY INVENT.CODE";

        //STOCK
        $this->sqlsreach['UPD_STOCK'] = "UPDATE INVENT SET LASTUPD='NOW', QUAN=QUAN - :quan,LASTOUT='NOW' WHERE RECNO=:recno";
        //HR
        $this->sqlsreach['EMPL_REST'] = "SELECT BDATE,BTIME,EDATE,ETIME,EMPL,RECNO,STATUS FROM EMPLREST";
    }
    public function scanSQL($queryId)
    {
        if (array_key_exists($queryId, $this->sqlsreach)) {
            return $this->sqlsreach[$queryId];
        } else {
            return null;
        }
    }
}
